# This is a basic workflow to help you get started with Actions

name: Publish Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the "main" branch with given paths
  push:
    branches: [ "main" ]
    paths: ["journals/**", "pages/**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: Logseq Publish ðŸš©
        #uses: pengx17/logseq-publish@v0.1
        #with:
        #  trace: false
        uses: logseq/publish-spa@v0.3.0
      - name: add a nojekyll file # to make sure asset paths are correctly identified
        run: touch "$GITHUB_WORKSPACE/www/.nojekyll"
      #- name: remove trace.zip
      #  run: rm www/trace.zip

      - name: Set environment variables to GITHUB_ENV
        run: |
          echo "SRC_FOLDER=." >> $GITHUB_ENV
          echo "TGT_FOLDER=www" >> $GITHUB_ENV
      - name: Copy assets
        run: |
          mkdir -p "${{ env.TGT_FOLDER }}/assets"
          cp -r "${{ env.SRC_FOLDER }}/assets" "${{ env.TGT_FOLDER }}"
      - name: Copy src/*.py
        run: |
          mkdir -p "${{ env.TGT_FOLDER }}/src"
          cp "${{ env.SRC_FOLDER }}/src/"*.py "${{ env.TGT_FOLDER }}/src/"
      - name: Copy api/*.py
        run: |
          mkdir -p "${{ env.TGT_FOLDER }}/api"
          cp "${{ env.SRC_FOLDER }}/api/"*.py "${{ env.TGT_FOLDER }}/api/"
      - name: Copy requirements.txt and vercel.json
        run: |
          for file in requirements.txt vercel.json
          do
            cp "${{ env.SRC_FOLDER }}/$file" "${{ env.TGT_FOLDER }}/"
          done
      - name: Copy latest journal (YYYY_MM_DD.md)
        run: |
          latest=$(find "${{ env.SRC_FOLDER }}/journals" -name "????_??_??.md" | sort -r | head -n 1)
          cp "$latest" "${{ env.TGT_FOLDER }}/"

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.9
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: www # The folder the action should deploy.
          clean: true
